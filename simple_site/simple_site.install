<?php
  //!function_exists('profiler_v2') ? require_once('libraries/profiler/profiler.inc') : FALSE;
  //profiler_v2('simple_site');
/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
 function simple_site_install() {
		include_once DRUPAL_ROOT . '/profiles/standard/standard.install';
		standard_install();
		
	//delete the article type since we created our own called news
	node_type_delete('article');
	//eliminate these unneeded modules
	module_disable(array('aggregator','blog','book','translation','forum','locale','poll','profiler_builder','xmlsitemap','toolbar'));
  drupal_uninstall_modules(array('aggregator','blog','book','translation','forum','locale','poll','profiler_builder','toolbar'));
		
  // Enable some simple_site blocks.
  $default_theme = 'bartik';
  $admin_theme = 'seven';
  // disable all themes
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();
  // enable $default_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $default_theme)
    ->execute();
  // enable $admin_theme
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  variable_set('admin_theme', $admin_theme);
  // activate admin theme when editing a node
  variable_set('node_admin_theme', '1');
  $blocks = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
  );
  // drop system / user blocks to ensure correct building
  db_delete('block')->condition('module', 'system')->execute();
  db_delete('block')->condition('module', 'user')->execute();
  // add in our blocks defined above
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($blocks as $block) {
    $query->values($block);
  }
  $query->execute();
  /*
  // From shortcut.install, add shortcuts to the default set on install
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links = NULL;
  $shortcut_set->links = array(
    array(
      'link_path' => 'admin/appearance',
      'link_title' => st('Set Theme'),
      'weight' => -17,
    ),
    array(
      'link_path' => 'admin/config/development/performance',
      'link_title' => st('Performance'),
      'weight' => -18,
    ),
    array(
      'link_path' => 'admin/structure/block',
      'link_title' => st('Blocks'),
      'weight' => -19,
    ),
    array(
      'link_path' => 'admin/structure/views',
      'link_title' => st('Views'),
      'weight' => -20,
    ),
  );
  shortcut_set_save($shortcut_set);*/
  /*
  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 10;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();
    */
  // Create some roles
  $cm_role = new stdClass();
  $cm_role->name = 'content manager';
  $cm_role->weight = 10;
  user_role_save($cm_role);
  $cm_role = new stdClass();
  $cm_role->name = 'account creator';
  $cm_role->weight = 11;
  user_role_save($cm_role);

  // set some variables?
  variable_set('pathauto_node_page_pattern', '[node:title]');
  variable_set('pathauto_node_news_pattern', 'news/[node:title]');
  variable_set('pathauto_node_events_pattern', 'events/[node:title]');
  variable_set('pathauto_node_people_pattern', 'people/[node:title]');
  variable_set('pathauto_node_webform_pattern', 'form/[node:title]');
  // Update the menu router information.
  menu_rebuild();
  
  // revert features to ensure they are all installed
  $features = array(
    'simple_blocks',
    //'simple_events',
    //'simple_news',
    //'simple_people',
    'simple_rotator',
    'simple_wysiwyg_profile',
    //'simple_content_manager_role',
  );
  features_revert($features);
  // ignore any rebuild messages
  node_access_needs_rebuild(FALSE);
  // ignore any other install messages
  drupal_get_messages();
}